<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
  "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
	<!--加载属性文件 -->
	<properties resource="jdbc.properties" />
	<context id="test" targetRuntime="MyBatis3">
		<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin" />
		<plugin type="org.mybatis.generator.plugins.SerializablePlugin" />
		<plugin type="org.mybatis.generator.plugins.ToStringPlugin" />
        <plugin type="org.mybatis.generator.MySQLPaginationPlugin" />
		<!-- <plugin type="org.mybatis.generator.plugins.RenameExampleClassPlugin"> 
			<property name="searchString" value="VoExample$" /> <property name="replaceString" 
			value="Example" /> </plugin> -->

		<!-- 自定义 commentGenerator -->
		<commentGenerator
			type="org.mybatis.generator.MyCommentGenerator">
		</commentGenerator>
		<!-- 标准 commentGenerator -->
		<!-- <commentGenerator> 
		  <property name="suppressDate" value="true" />
		  <property name="suppressAllComments" value="false" /> 
		</commentGenerator> -->
		<!--数据库链接URL，用户名、密码 -->
		<jdbcConnection driverClass="${jdbc.driver}"
			connectionURL="${jdbc.url}" userId="${jdbc.username}"
			password="${jdbc.password}">
		</jdbcConnection>
		<javaTypeResolver>
			<!-- This property is used to specify whether MyBatis Generator should 
				force the use of java.math.BigDecimal for DECIMAL and NUMERIC fields, -->
			<property name="forceBigDecimals" value="false" />
		</javaTypeResolver>
		<!-- 生成模型的包名和位置 -->
		<javaModelGenerator
			targetPackage="com.model" targetProject="src/main/java">
			<property name="enableSubPackages" value="true" />
			<property name="trimStrings" value="true" />
		</javaModelGenerator>
		<!-- 生成映射文件的包名和位置 -->
		<!-- 生成DAO的包名和位置 -->
		<!-- table可选属性 -->
		<!-- 1，schema：数据库的schema； 2，catalog：数据库的catalog； 3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT 
			SQL语句中，列名会变成：alias_actualColumnName 4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面； 
			5，enableInsert（默认true）：指定是否生成insert语句； 6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）； 
			7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句； 8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)； 
			9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）； 10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句； 
			11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）； 
			12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）； 
			13，modelType：参考context元素的defaultModelType，相当于覆盖； 14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性） 
			15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性 -->
		<!-- base -->
		<sqlMapGenerator
			targetPackage="com.base.mapper"
			targetProject="src/main/resources">
			<property name="enableSubPackages" value="true" />
		</sqlMapGenerator>
		<javaClientGenerator type="XMLMAPPER"
			targetPackage="com.core.base.mapper"
			targetProject="src/main/java">
			<property name="enableSubPackages" value="true" />
		</javaClientGenerator>
        <table tableName="base_file_t" domainObjectName="BaseFile"
            selectByExampleQueryId="false">
            <property name="rootClass" value="com.model.BaseVO" />
            <generatedKey column="base_file_uuid" sqlStatement="select uuid() from dual" />
        </table>
	</context>
</generatorConfiguration>